load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
load(":ts_proto_library.bzl", "ts_proto_library")

package(default_visibility = ["//visibility:public"])

proto_library(
    name = "logger_proto",
    srcs = ["logger.proto"],
)

go_proto_library(
    name = "logger_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "bootcamp/schema/logger",
    proto = ":logger_proto",
)

go_library(
    name = "logger",
    embed = [":logger_go_proto"],
    importpath = "bootcamp/schema/logger",
)

ts_proto_library(
    name = "logger_ts_proto",
    proto = ":logger_proto",
)

java_proto_library(
    name = "logger_java_proto",
    deps = [":logger_proto"],
)

# TODO(alex): what we really want for generating the gRPC stub is likely
#
# load("@io_grpc_grpc_java//:java_grpc_library.bzl", "java_grpc_library")
# java_grpc_library(
#     name = "logger_java_grpc",
#     srcs = [":logger_proto"],
#     deps = [":logger_java_proto"],
# )
#
# HOWEVER there's not a tidy way to do that with bzlmod yet:
# https://github.com/grpc/grpc-java/issues/9559
#
# So we just go old-skool: run protoc with the codegen plugin, like so:
# - get protoc from somewhere
# - download from https://mvnrepository.com/artifact/io.grpc/protoc-gen-grpc-java/1.51.0
# And run:
# protoc --plugin=protoc-gen-rpc-plugin=/home/alexeagle/Downloads/protoc-gen-grpc-java-1.51.0-linux-x86_64.exe \
#        --descriptor_set_in=./bazel-bin/schema/logger/logger_proto-descriptor-set.proto.bin \
#        --rpc-plugin_out=:grpc.jar \
#        schema/logger/logger.proto
#
# To get a grpc.jar, then run unzip to get the LoggerGrpc.java file out of it.
# Then we just compile it as if it's our own source file.
# After all, checking in generated code is pretty typical in some ecosystems, and so there's
# no reason we can't do it under Bazel as well...
# so we put that LoggerGrpc.java in the client folder.
# And I had to delete the @Generated annotation for some reason.
